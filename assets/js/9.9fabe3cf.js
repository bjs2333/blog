(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{362:function(e,t,r){"use strict";r.r(t);var a=r(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("介绍")]),e._v(" "),r("p",[e._v("分块加载大数据")])]),e._v(" "),r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),r("p",[e._v("当用户网络较差、后端返回大量数据时，如果等待响应体全部接收完毕再响应，可能会导致页面出现卡顿现象、页面内部无法及时更新等。因此在响应体的接收过程中，对响应体已接收到的部分进行呈现，可以极大提高性能，优化性能。")]),e._v(" "),r("h2",{attrs:{id:"普通网络请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#普通网络请求"}},[e._v("#")]),e._v(" 普通网络请求")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" url "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./simulate-data.json'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 该文件存放大量数据，用于模拟请求大数据（大小7M）")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("async")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("loadMusicList_normal")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("url")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" resp "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("fetch")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("url"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" text "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" resp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("text")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("text"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("loadMusicList_normal")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("url"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("p",[e._v("使用这种网络请求方法，在每次发送网络请求时，只有在完全接收完响应体后，才能获得响应体中的数据。")]),e._v(" "),r("p",[e._v("这种方法最大的缺陷就是：如果用户网络环境不好，或者一次性接收大量数据，将会导致页面卡顿（这是使用了 "),r("code",[e._v("async await")]),e._v("），必须等待到数据完全接收完，才会执行后面的代码。")]),e._v(" "),r("h2",{attrs:{id:"网络请求优化-响应体分块加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络请求优化-响应体分块加载"}},[e._v("#")]),e._v(" 网络请求优化：响应体分块加载")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" url "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./simulate-data.json'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 该文件存放大量数据，用于模拟请求大数据（大小7M）")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("async")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("loadNovel_update")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("url")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" resp "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("fetch")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("url"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" reader "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" resp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("body"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("getReader")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" decoder "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("TextDecoder")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" done "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" reader"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("read")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("done"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("break")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" text "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" decoder"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("decode")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("text"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("loadNovel_update")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("url"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("h3",{attrs:{id:"思路分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#思路分析"}},[e._v("#")]),e._v(" 思路分析")]),e._v(" "),r("p",[e._v("通过 fetch 发起网络请求，在请求发起后的接收数据过程中对响应的流进行暴漏，然后进行加工处理，一直重复循环直到响应体全部接收完成。")]),e._v(" "),r("h3",{attrs:{id:"代码分析-保姆级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码分析-保姆级"}},[e._v("#")]),e._v(" 代码分析（保姆级）")]),e._v(" "),r("p",[e._v("这里我们对上面的代码异步函数 "),r("code",[e._v("loadNovel_update")]),e._v(" 进行分析（按照逻辑顺序进行分析，而不是从上到下逐行分析）：")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" resp "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("fetch")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("url"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("blockquote",[r("p",[r("code",[e._v("await")]),e._v(" 操作符用于等待一个 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Promise")]),r("OutboundLink")],1),e._v(" 兑现并获取它兑现之后的值。它只能在"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步函数"),r("OutboundLink")],1),e._v("或者"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("模块"),r("OutboundLink")],1),e._v("顶层中使用。")])]),e._v(" "),r("p",[e._v("阅读上面这段对于 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/await",target:"_blank",rel:"noopener noreferrer"}},[e._v("await"),r("OutboundLink")],1),e._v(" 的介绍，不难猜出，"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/fetch",target:"_blank",rel:"noopener noreferrer"}},[e._v("fetch"),r("OutboundLink")],1),e._v(" 的返回值是一个 Promise 。")]),e._v(" "),r("p",[e._v("这里我对 "),r("code",[e._v("fetch")]),e._v(" 进行介绍，"),r("strong",[r("code",[e._v("fetch()")])]),e._v(" 方法用于发起获取资源的请求。它返回一个 promise，这个 promise 会在请求响应后被 resolve，并传回 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Response",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Response")]),r("OutboundLink")],1),e._v(" 对象。")]),e._v(" "),r("p",[e._v("所以，这里的 "),r("code",[e._v("resp")]),e._v(" 常量为一个 "),r("code",[e._v("Response")]),e._v(" 对象。")]),e._v(" "),r("p",[e._v("对于 Response ，我们可以看官方对他的描述：")]),e._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fetch API"),r("OutboundLink")],1),e._v(" 的 "),r("code",[e._v("Response")]),e._v(" 接口呈现了对一次请求的响应数据。")])]),e._v(" "),r("hr"),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" reader "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" resp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("body"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("getReader")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("p",[e._v("由于 "),r("code",[e._v("resp")]),e._v(" 为 "),r("code",[e._v("Response")]),e._v(" 对象，因此 resp.body 即 Response 对象中的 body 属性。")]),e._v(" "),r("p",[e._v("那么，body 属性是什么呢 ❓ 对此，我们查看官方对此的描述：")]),e._v(" "),r("blockquote",[r("p",[e._v("一个简单的 getter，用于暴露一个 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStream")]),r("OutboundLink")],1),e._v(" 类型的 body 内容。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Response",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Response")]),r("OutboundLink")],1),e._v(" 接口的只读属性 "),r("strong",[r("code",[e._v("body")])]),e._v(" 是暴露响应体内容的 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStream")]),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[e._v("值：一个 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStream")]),r("OutboundLink")],1),e._v("，或者对于使用空的 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Response/Response#body",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("body")]),r("OutboundLink")],1),e._v(" 属性构建的任意的 "),r("code",[e._v("Response")]),e._v(" 对象，或没有任何"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Messages#body_2",target:"_blank",rel:"noopener noreferrer"}},[e._v("主体"),r("OutboundLink")],1),e._v("的实际 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Messages#http_%E5%93%8D%E5%BA%94",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP 响应"),r("OutboundLink")],1),e._v("，则为 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("null")]),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[r("code",[e._v("ReadableStream")]),e._v(" ："),r("code",[e._v("ReadableStream")]),e._v(" 接口呈现了一个可读取的"),r("em",[e._v("二进制")]),e._v("流操作。")])]),e._v(" "),r("p",[e._v("阅读此段话后，可以知道使用 "),r("code",[e._v("response.body")]),e._v(" 暴露响应的流，即可以 "),r("strong",[e._v("暴露已接收的响应体的内容")]),e._v(" 。")]),e._v(" "),r("p",[e._v("这也就达到我们的目的了，在发送网络请求后接收数据时，在响应体数据过大时，对响应体的内容进行分块处理（即在未完全接收全部响应体的数据时，就可以对已接收的数据进行处理）。")]),e._v(" "),r("p",[r("code",[e._v("response.body")]),e._v(" 的值是一个 "),r("code",[e._v("ReadableStream")]),e._v("，"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStream")]),r("OutboundLink")],1),e._v(" 接口的 "),r("strong",[r("code",[e._v("getReader()")])]),e._v(" 方法会创建一个 "),r("code",[e._v("reader")]),e._v("，并将流锁定。只有当前 "),r("code",[e._v("reader")]),e._v(" 将流释放后，其他 "),r("code",[e._v("reader")]),e._v(" 才能使用。")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("ReadableStream.getReader()")]),e._v(" "),r("p",[e._v("语法："),r("code",[e._v("getReader(mode)")])]),e._v(" "),r("p",[e._v("当 mode 参数不指定——缺少值，会返回"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStreamDefaultReader",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStreamDefaultReader")]),r("OutboundLink")],1),e._v("，可以从流中返回单个块。")])]),e._v(" "),r("p",[e._v("所以 resp.body.getReader() 的返回值为 "),r("code",[e._v("ReadableStreamDefaultReader")]),e._v("，即 reader 的值为 "),r("code",[e._v("ReadableStreamDefaultReader")]),e._v("。")]),e._v(" "),r("hr"),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" done "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" reader"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("read")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("p",[e._v("在上面，我们分析得到，reader 的值实质上是一个 "),r("code",[e._v("ReadableStreamDefaultReader")]),e._v("。")]),e._v(" "),r("p",[e._v("对于 "),r("code",[e._v("ReadableStreamDefaultReader")]),e._v(" ，阅读了"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStreamDefaultReader",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),r("OutboundLink")],1),e._v("的描述，对其摘要如下：")]),e._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Streams_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stream API"),r("OutboundLink")],1),e._v(" 的 "),r("strong",[e._v("ReadableStreamDefaultReader")]),e._v(" 接口表示一个用于读取来自网络提供的流数据（例如 fetch 请求）的默认读取器。")]),e._v(" "),r("p",[r("strong",[e._v("ReadableStreamDefaultReader")]),e._v(" 的其中一个实例方法："),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStreamDefaultReader/read",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStreamDefaultReader.read()")]),r("OutboundLink")],1),e._v("，作用为返回一个 promise，提供对流内部队列中下一个分块的访问权限。")])]),e._v(" "),r("p",[e._v("因为 "),r("code",[e._v("ReadableStreamDefaultReader.read()")]),e._v("返回一个 promise，所以我们可以使用 "),r("code",[e._v("await reader.read()")]),e._v(" 以获得该 promise 的兑现后的值。")]),e._v(" "),r("p",[e._v("那 "),r("code",[e._v("ReadableStreamDefaultReader.read()")]),e._v("返回的 promise 是什么呢 ❓ 继续阅读"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStreamDefaultReader/read",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),r("OutboundLink")],1),e._v("，文档对其描述如下：")]),e._v(" "),r("blockquote",[r("p",[e._v("一个 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Promise")]),r("OutboundLink")],1),e._v("，其兑现/拒绝的结果取决于流的状态。不同的可能性如下：")]),e._v(" "),r("ul",[r("li",[e._v("如果有分块可用，则 promise 将使用 "),r("code",[e._v("{ value: theChunk, done: false }")]),e._v(" 形式的对象来兑现。")]),e._v(" "),r("li",[e._v("如果流已经关闭，则 promise 将使用 "),r("code",[e._v("{ value: undefined, done: true }")]),e._v(" 形式的对象来兑现。")]),e._v(" "),r("li",[e._v("如果流发生错误，promise 将因相关错误被拒绝。")])])]),e._v(" "),r("p",[e._v("因此，我们可以对返回的该 promise 兑现的值进行解构接收，即 "),r("code",[e._v("const { value, done } = await reader.read();")])]),e._v(" "),r("p",[e._v("这行代码的分析似乎到此就结束了，但 嗯~~~。有细心的人可能发现了上面对 "),r("code",[e._v("ReadableStreamDefaultReader.read()")]),e._v(" 作用这里只分析了一半。")]),e._v(" "),r("p",[e._v("这里我们重新看一次这段话：")]),e._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStreamDefaultReader/read",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStreamDefaultReader.read()")]),r("OutboundLink")],1),e._v("，作用为返回一个 promise，提供对流内部队列中下一个分块的访问权限。")])]),e._v(" "),r("p",[e._v("对于这后半句话，"),r("strong",[e._v("提供对流内部队列中下一个分块的访问权限")]),e._v("，")]),e._v(" "),r("p",[e._v("这时候，我们难免不会疑惑，为什么需要提供对流内部队列中的下一份快的访问权限呢 ❓ 这个访问权限什么时候就被关闭了的呢 ❓")]),e._v(" "),r("p",[e._v("重新回顾上面的代码，可以发现在第二行代码中，我们使用了 "),r("code",[e._v("resp.body.getReader()")]),e._v(" 暴漏响应的流，同时也将流进行了锁定。这里对 "),r("code",[e._v("getReader()")]),e._v(" 的作用进行回顾：")]),e._v(" "),r("blockquote",[r("p",[r("code",[e._v("response.body")]),e._v(" 的值是一个 "),r("code",[e._v("ReadableStream")]),e._v("，"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ReadableStream")]),r("OutboundLink")],1),e._v(" 接口的 "),r("strong",[r("code",[e._v("getReader()")])]),e._v(" 方法会创建一个 "),r("code",[e._v("reader")]),e._v("，并将流锁定。只有当前 "),r("code",[e._v("reader")]),e._v(" 将流释放后，其他 "),r("code",[e._v("reader")]),e._v(" 才能使用。")])]),e._v(" "),r("p",[e._v("回顾后，兴许你就会豁然开朗，正是 "),r("code",[e._v("resp.body.getReader()")]),e._v(" 将流进行锁定了，才需要 "),r("code",[e._v("ReadableStreamDefaultReader.read()")]),e._v(" "),r("strong",[e._v("提供对流内部队列中下一个分块的访问权限。")])]),e._v(" "),r("p",[e._v("最后，重新回顾最后获得的值，"),r("code",[e._v("{ value , done }")]),e._v(" 。")]),e._v(" "),r("p",[e._v("对于 done ，只有 true 和 false 两个值，但是对于 value ，它的值是什么呢。")]),e._v(" "),r("p",[e._v("我们尝试在控制台打印 value，发现输出值是 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",target:"_blank",rel:"noopener noreferrer"}},[e._v("Uint8Array"),r("OutboundLink")],1),e._v(" ，")]),e._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[e._v("该 value 打印值")]),e._v(" "),r("p",[r("strong",[e._v("Uint8Array(65536)")])]),e._v(" "),r("ol",[r("li",[r("strong",[e._v("[0 … 9999]")]),e._v(" "),r("ol",[r("li",[r("strong",[e._v("[0 … 99]")]),e._v(" "),r("ol",[r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("57")])]),e._v(" "),r("li",[r("strong",[e._v("57")])]),e._v(" "),r("li",[r("strong",[e._v("57")])]),e._v(" "),r("li",[r("strong",[e._v("48")])]),e._v(" "),r("li",[r("strong",[e._v("48")])]),e._v(" "),r("li",[r("strong",[e._v("48")])]),e._v(" "),r("li",[r("strong",[e._v("44")])]),e._v(" "),r("li",[r("strong",[e._v("10")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("34")])]),e._v(" "),r("li",[r("strong",[e._v("100")])]),e._v(" "),r("li",[r("strong",[e._v("111")])]),e._v(" "),r("li",[r("strong",[e._v("119")])]),e._v(" "),r("li",[r("strong",[e._v("110")])]),e._v(" "),r("li",[r("strong",[e._v("108")])]),e._v(" "),r("li",[r("strong",[e._v("111")])]),e._v(" "),r("li",[r("strong",[e._v("97")])]),e._v(" "),r("li",[r("strong",[e._v("100")])]),e._v(" "),r("li",[r("strong",[e._v("77")])]),e._v(" "),r("li",[r("strong",[e._v("97")])]),e._v(" "),r("li",[r("strong",[e._v("120")])]),e._v(" "),r("li",[r("strong",[e._v("98")])]),e._v(" "),r("li",[r("strong",[e._v("114")])]),e._v(" "),r("li",[r("strong",[e._v("34")])]),e._v(" "),r("li",[r("strong",[e._v("58")])]),e._v(" "),r("li",[r("strong",[e._v("32")])]),e._v(" "),r("li",[r("strong",[e._v("57")])]),e._v(" "),r("li",[r("strong",[e._v("57")])]),e._v(" "),r("li",[r("strong",[e._v("57")])]),e._v(" "),r("li",[r("strong",[e._v("48")])]),e._v(" "),r("li",[e._v("......")])])]),e._v(" "),r("li",[r("strong",[e._v("[100 … 199]")])]),e._v(" "),r("li",[r("strong",[e._v("[200 … 299]")])]),e._v(" "),r("li",[r("strong",[e._v("[300 … 399]")])]),e._v(" "),r("li",[r("strong",[e._v("[400 … 499]")])]),e._v(" "),r("li",[r("strong",[e._v("[500 … 599]")])]),e._v(" "),r("li",[r("strong",[e._v("[600 … 699]")])]),e._v(" "),r("li",[r("strong",[e._v("[700 … 799]")])]),e._v(" "),r("li",[r("strong",[e._v("[800 … 899]")])]),e._v(" "),r("li",[r("strong",[e._v("[900 … 999]")])]),e._v(" "),r("li",[r("strong",[e._v("[1000 … 1099]")])]),e._v(" "),r("li",[r("strong",[e._v("[1100 … 1199]")])]),e._v(" "),r("li",[r("strong",[e._v("[1200 … 1299]")])]),e._v(" "),r("li",[r("strong",[e._v("[1300 … 1399]")])]),e._v(" "),r("li",[r("strong",[e._v("[1400 … 1499]")])]),e._v(" "),r("li",[r("strong",[e._v("[1500 … 1599]")])]),e._v(" "),r("li",[r("strong",[e._v("[1600 … 1699]")])]),e._v(" "),r("li",[r("strong",[e._v("[1700 … 1799]")])]),e._v(" "),r("li",[r("strong",[e._v("[1800 … 1899]")])]),e._v(" "),r("li",[r("strong",[e._v("[1900 … 1999]")])]),e._v(" "),r("li",[r("strong",[e._v("[2000 … 2099]")])]),e._v(" "),r("li",[r("strong",[e._v("[2100 … 2199]")])]),e._v(" "),r("li",[r("strong",[e._v("[2200 … 2299]")])]),e._v(" "),r("li",[r("strong",[e._v("[2300 … 2399]")])]),e._v(" "),r("li",[r("strong",[e._v("[2400 … 2499]")])]),e._v(" "),r("li",[r("strong",[e._v("[2500 … 2599]")])]),e._v(" "),r("li",[r("strong",[e._v("[2600 … 2699]")])]),e._v(" "),r("li",[r("strong",[e._v("[2700 … 2799]")])]),e._v(" "),r("li",[r("strong",[e._v("[2800 … 2899]")])]),e._v(" "),r("li",[r("strong",[e._v("[2900 … 2999]")])]),e._v(" "),r("li",[r("strong",[e._v("[3000 … 3099]")])]),e._v(" "),r("li",[r("strong",[e._v("[3100 … 3199]")])]),e._v(" "),r("li",[r("strong",[e._v("[3200 … 3299]")])]),e._v(" "),r("li",[r("strong",[e._v("[3300 … 3399]")])]),e._v(" "),r("li",[r("strong",[e._v("[3400 … 3499]")])]),e._v(" "),r("li",[r("strong",[e._v("[3500 … 3599]")])]),e._v(" "),r("li",[r("strong",[e._v("[3600 … 3699]")])]),e._v(" "),r("li",[r("strong",[e._v("[3700 … 3799]")])]),e._v(" "),r("li",[e._v("......")])])]),e._v(" "),r("li",[r("strong",[e._v("[10000 … 19999]")])]),e._v(" "),r("li",[r("strong",[e._v("[20000 … 29999]")])]),e._v(" "),r("li",[r("strong",[e._v("[30000 … 39999]")])]),e._v(" "),r("li",[r("strong",[e._v("[40000 … 49999]")])]),e._v(" "),r("li",[r("strong",[e._v("[50000 … 59999]")])]),e._v(" "),r("li",[r("strong",[e._v("[60000 … 65535]")])]),e._v(" "),r("li",[r("strong",[e._v("buffer")]),e._v(": "),r("strong",[e._v("ArrayBuffer(65536)")])]),e._v(" "),r("li",[r("strong",[e._v("byteLength")]),e._v(": "),r("strong",[e._v("65536")])]),e._v(" "),r("li",[r("strong",[e._v("byteOffset")]),e._v(": "),r("strong",[e._v("0")])]),e._v(" "),r("li",[r("strong",[e._v("length")]),e._v(": "),r("strong",[e._v("65536")])]),e._v(" "),r("li",[r("strong",[e._v("Symbol(Symbol.toStringTag)")]),e._v(": "),r("strong",[e._v('"Uint8Array"')])]),e._v(" "),r("li",[r("strong",[e._v("[[Prototype]]")]),e._v(": "),r("strong",[e._v("TypedArray")])])])]),e._v(" "),r("p",[e._v("那么，这个"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",target:"_blank",rel:"noopener noreferrer"}},[e._v("Uint8Array"),r("OutboundLink")],1),e._v("是什么呢 ❓ 以下为官方文档的描述：")]),e._v(" "),r("blockquote",[r("p",[r("strong",[r("code",[e._v("Uint8Array")])]),e._v(" 数组类型表示一个 8 位无符号整型数组，创建时内容被初始化为 0。创建完后，可以以对象的方式或使用数组下标索引的方式引用数组中的元素。")])]),e._v(" "),r("p",[e._v("具体展开每个 Uint8Array 中的每次值，发现都是 "),r("code",[e._v("123、10、32")]),e._v(" 等的数字，与我们预期的值完全不是一回事。")]),e._v(" "),r("p",[e._v("这里我们使用 "),r("code",[e._v("TextDecoder")]),e._v(" 来解析这里的 value，就可以将其转换为我们预期的值，对于 "),r("code",[e._v("TextDecoder")]),e._v(" ，"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TextDecoder",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),r("OutboundLink")],1),e._v("对其描述如下：")]),e._v(" "),r("blockquote",[r("p",[r("strong",[r("code",[e._v("TextDecoder")])]),e._v(" 接口表示一个文本解码器，一个解码器只支持一种特定文本编码，例如 "),r("code",[e._v("UTF-8")]),e._v("、"),r("code",[e._v("ISO-8859-2")]),e._v("、"),r("code",[e._v("KOI8-R")]),e._v("、"),r("code",[e._v("GBK")]),e._v("，等等。解码器将字节流作为输入，并提供码位流作为输出。")])]),e._v(" "),r("p",[r("code",[e._v("const decoder = new TextDecoder()")]),e._v(" 实例化构造函数，这里我们不指定参数，则默认调用其方法时会将方法接收的参数转换为 "),r("code",[e._v("utf-8")]),e._v(" 编码的值。")]),e._v(" "),r("p",[e._v("随后调用 TextDecoder 的方法"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TextDecoder/decode",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("TextDecoder.prototype.decode()")]),r("OutboundLink")],1),e._v("，对于该方法，"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TextDecoder/decode",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),r("OutboundLink")],1),e._v("描述如下：")]),e._v(" "),r("blockquote",[r("p",[r("strong",[r("code",[e._v("TextDecoder.decode()")])]),e._v(" 方法返回一个字符串，其包含作为参数传递的缓冲区解码后的文本。")]),e._v(" "),r("p",[e._v("解码方法在当前的 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TextDecoder",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("TextDecoder")]),r("OutboundLink")],1),e._v(" 对象中定义。这包含了数据的预期编码，以及如何处理解码时发生的错误。")]),e._v(" "),r("p",[e._v("语法："),r("code",[e._v("decode(buffer, options)")]),e._v("。buffer、options 可选。buffer 值为一个 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ArrayBuffer")]),r("OutboundLink")],1),e._v("、"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("TypedArray")]),r("OutboundLink")],1),e._v(" 或包含要解码的编码文本的 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/DataView",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("DataView")]),r("OutboundLink")],1),e._v(" 对象。")])]),e._v(" "),r("p",[e._v("这里 buffer 值可以是一个 TypedArray，而上面的 value 打印后的结果"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",target:"_blank",rel:"noopener noreferrer"}},[e._v("Uint8Array"),r("OutboundLink")],1),e._v(" 也正是 TypedArray。所以可以将 value 解析成 utf-8 编码的字符串，即预期的格式。")]),e._v(" "),r("p",[e._v("但是，我们还是会很疑惑，为什么使用这个方法，以及为什么这个方法可以将 value 转化为预期值。")]),e._v(" "),r("p",[e._v("在上面，我们直接这样对 Uinit8Array 就直接说是 TypedArray，难免显得很突兀，所以我摘录了一段来自官方文档的话：")]),e._v(" "),r("blockquote",[r("h2",{attrs:{id:"uint8array-原型声明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#uint8array-原型声明"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array#uint8array_%E5%8E%9F%E5%9E%8B%E5%A3%B0%E6%98%8E",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Uint8Array")]),e._v(" 原型声明"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("所有的 "),r("code",[e._v("Uint8Array 对象继承自")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",title:"Currently only available in English (US)",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("%TypedArray%.prototype")]),e._v(" (en-US)"),r("OutboundLink")],1),e._v(".")])]),e._v(" "),r("p",[e._v("而 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/TextDecoder/decode",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("TextDecoder.prototype.decode()")]),r("OutboundLink")],1),e._v(" 刚好可以接收一个 TypedArray，因此我们可以将 value 传入该方法作为参数，该方法则发布会将其转化为预期后值。")]),e._v(" "),r("p",[e._v("这就是这份代码的所有分析，到此结束啦 ❗❗")]),e._v(" "),r("div",{staticClass:"custom-block danger"},[r("p",{staticClass:"custom-block-title"},[e._v("友情提醒")]),e._v(" "),r("p",[e._v("由于该文章涉及太多知识我也是第一次接触，因此在写这篇文章时，我翻阅了大量文档，短短几行代码的分析加上写这篇文章一共花了接近五个小时，但也存在一些没有理清楚的地方。因此如果存在纰漏，希望可以联系纠正。")]),e._v(" "),r("p",[e._v("该分块加载代码只是撰写了其核心代码，而不是其全部。")]),e._v(" "),r("p",[e._v("比如这里使用 for(;😉，会导致线程阻塞，一样会导致只有等待响应体接收完成才可以进行后面同步队列里的代码。所以需要替换成异步调用，进一步优化。")]),e._v(" "),r("p",[e._v("还有就是这样的解析中，响应的流中的开头和末尾，可能存在不完整的二进制编码，会出现乱码，因此也需要对其进行解析")])]),e._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[e._v("视频借鉴")]),e._v(" "),r("p",[e._v("web 渡一 （抖音）")])]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("相关文章")]),e._v(" "),r("p",[e._v("文章引用太多，需要的话从文章中的链接自提")])])])}),[],!1,null,null,null);t.default=s.exports}}]);