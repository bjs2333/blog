(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{360:function(t,e,s){"use strict";s.r(e);var v=s(42),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("介绍")]),t._v(" "),s("p",[t._v("折叠、展开代码，优化编码体验")])]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("当一个文件中代码行数过多时，即使再简单的业务逻辑阅读起来也会让人头疼。为了提高代码可读性，就需要对代码进行优化。")]),t._v(" "),s("p",[t._v("在对代码进行优化时，可以对代码进行进行函数封装、模块化等操作。")]),t._v(" "),s("p",[t._v("但在微信小程序开发和 vue2 等使用 options API 进行开发的框架，或者工具模块的封装等，即使对一些逻辑进行抽离封装，也无法避免内容过多导致可读性降低，而 #region 可以一定程度避免这种现象产生。")]),t._v(" "),s("h2",{attrs:{id:"正文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[t._v("#")]),t._v(" 正文")]),t._v(" "),s("p",[t._v("在文章开头，我使用写过的一个微信小程序项目中的一个 page 里的 js 文件进行引出，下面为该文件的大致内容")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog.joyxin.top/image/screenShot/121001_01.png",alt:"普通代码结构"}})]),t._v(" "),s("p",[t._v("也许看到上面这些代码，并不会让你感到头疼，这是因为代码已经进行了层次分明的划分，且代码较少。")]),t._v(" "),s("p",[t._v("现在我们阅读起来上面的代码并不会有问题，但是如果代码多起来了呢。如果你对一个文件里的逻辑都能做到层次分明的划分时，这时候这个文件里有着二三十个函数，这时候当进行代码的编写修改，无疑会花费一些时间在找对应代码上。")]),t._v(" "),s("p",[t._v("在很多语言中，都存在 "),s("code",[t._v("#region")]),t._v(" 与 "),s("code",[t._v("#endregion")]),t._v(" ，可以折叠两者其中的任意代码包括注释，下面展示 "),s("code",[t._v("#region")]),t._v(" 对代码结构划分起到的作用：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog.joyxin.top/image/screenShot/121001_02.png",alt:"region折叠代码"}})]),t._v(" "),s("p",[t._v("我们可以看到，使用 "),s("code",[t._v("#region")]),t._v(" 后可以一眼看出来某个区域对应的功能，而且每个区域里的代码的作用都是类似，因此可以对代码进行分类划分，这样对于我们编写代码的过程中，可以对代码进行优化。")])])}),[],!1,null,null,null);e.default=_.exports}}]);